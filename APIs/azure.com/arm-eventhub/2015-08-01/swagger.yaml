swagger: '2.0'
schemes:
  - https
host: management.azure.com
info:
  description: Azure Event Hubs client
  title: EventHubManagementClient
  version: '2015-08-01'
  x-apisguru-categories:
    - cloud
  x-logo:
    url: 'https://assets.onestore.ms/cdnfiles/onestorerolling-1606-01000/shell/v3/images/logo/microsoft.png'
  x-origin:
    - format: swagger
      url: 'https://raw.githubusercontent.com/Azure/azure-rest-api-specs/master/arm-eventhub/2015-08-01/swagger/EventHub.json'
      version: '2.0'
  x-preferred: true
  x-providerName: azure.com
  x-serviceName: arm-eventhub
  x-tags:
    - Azure
    - Microsoft
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  azure_auth:
    authorizationUrl: 'https://login.microsoftonline.com/common/oauth2/authorize'
    description: Azure Active Directory OAuth2 Flow
    flow: implicit
    scopes:
      user_impersonation: impersonate your user account
    type: oauth2
security:
  - azure_auth:
      - user_impersonation
parameters:
  ApiVersionParameter:
    description: Client API Version.
    in: query
    name: api-version
    required: true
    type: string
  SubscriptionIdParameter:
    description: Subscription credentials that uniquely identify a Microsoft Azure subscription. The subscription ID forms part of the URI for every service call.
    in: path
    name: subscriptionId
    required: true
    type: string
  authorizationRuleNameParameter:
    description: The authorizationrule name.
    in: path
    maxLength: 50
    minLength: 1
    name: authorizationRuleName
    required: true
    type: string
    x-ms-parameter-location: method
  consumerGroupNameParameter:
    description: The consumer group name
    in: path
    maxLength: 50
    minLength: 1
    name: consumerGroupName
    required: true
    type: string
    x-ms-parameter-location: method
  eventHubNameParameter:
    description: The eventhub name
    in: path
    maxLength: 50
    minLength: 1
    name: eventHubName
    required: true
    type: string
    x-ms-parameter-location: method
  namespaceNameParameter:
    description: The namespace name
    in: path
    maxLength: 50
    minLength: 6
    name: namespaceName
    required: true
    type: string
    x-ms-parameter-location: method
  resourceGroupNameParameter:
    description: Name of the Resource group within the Azure subscription.
    in: path
    maxLength: 90
    minLength: 1
    name: resourceGroupName
    required: true
    type: string
    x-ms-parameter-location: method
paths:
  /providers/Microsoft.EventHub/operations:
    get:
      description: Lists all of the available event hub REST API operations.
      operationId: Operations_List
      parameters:
        - $ref: '#/parameters/ApiVersionParameter'
      responses:
        '200':
          description: OK. The request has succeeded.
          schema:
            $ref: '#/definitions/OperationListResult'
      tags:
        - Operations
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/CheckNameAvailability':
    post:
      description: Check the give namespace name availability.
      operationId: Namespaces_CheckNameAvailability
      parameters:
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
        - description: Parameters to check availability of the given namespace name
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/CheckNameAvailability'
      responses:
        '200':
          description: check availability returned successfully.
          schema:
            $ref: '#/definitions/CheckNameAvailabilityResult'
      tags:
        - Namespaces
  '/subscriptions/{subscriptionId}/providers/Microsoft.EventHub/namespaces':
    get:
      description: 'Lists all the available namespaces within a subscription, irrespective of the resource groups.'
      operationId: Namespaces_List
      parameters:
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespaces returned successfully.
          schema:
            $ref: '#/definitions/NamespaceListResult'
      tags:
        - Namespaces
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces':
    get:
      description: Lists the available namespaces within a resource group.
      operationId: Namespaces_ListByResourceGroup
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespaces returned successfully.
          schema:
            $ref: '#/definitions/NamespaceListResult'
      tags:
        - Namespaces
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}':
    delete:
      description: Deletes an existing namespace. This operation also removes all associated resources under the namespace.
      operationId: Namespaces_Delete
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace successfuly deleted.
        '202':
          description: Namespace delete request accepted.
        '204':
          description: No content.
      tags:
        - Namespaces
      x-ms-long-running-operation: true
    get:
      description: Gets the description of the specified namespace.
      operationId: Namespaces_Get
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace returned successfully.
          schema:
            $ref: '#/definitions/Namespace'
      tags:
        - Namespaces
    patch:
      description: 'Creates or updates a namespace. Once created, this namespace''s resource manifest is immutable. This operation is idempotent.'
      operationId: Namespaces_Update
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - description: Parameters for updating a namespace resource.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/NamespaceUpdateParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace successfuly updated.
          schema:
            $ref: '#/definitions/Namespace'
        '201':
          description: Namespace update request accepted.
          schema:
            $ref: '#/definitions/Namespace'
        '202':
          description: Namespace create or update request accepted.
      tags:
        - Namespaces
    put:
      description: 'Creates or updates a namespace. Once created, this namespace''s resource manifest is immutable. This operation is idempotent.'
      operationId: Namespaces_CreateOrUpdate
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - description: Parameters for creating a namespace resource.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/Namespace'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace successfuly created.
          schema:
            $ref: '#/definitions/Namespace'
        '201':
          description: Namespace create request accepted.
          schema:
            $ref: '#/definitions/Namespace'
        '202':
          description: Namespace create or update request accepted.
      tags:
        - Namespaces
      x-ms-long-running-operation: true
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules':
    get:
      description: Gets a list of authorization rules for a namespace.
      operationId: Namespaces_ListAuthorizationRules
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace authorization rule successfully returned.
          schema:
            $ref: '#/definitions/SharedAccessAuthorizationRuleListResult'
      tags:
        - Namespaces
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}':
    delete:
      description: Deletes an authorization rule for a namespace.
      operationId: Namespaces_DeleteAuthorizationRule
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/authorizationRuleNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace authorization rule successfully deleted.
        '204':
          description: No content.
      tags:
        - Namespaces
    get:
      description: Gets an authorization rule for a namespace by rule name.
      operationId: Namespaces_GetAuthorizationRule
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/authorizationRuleNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace authorization rule returned successfully.
          schema:
            $ref: '#/definitions/SharedAccessAuthorizationRule'
      tags:
        - Namespaces
    put:
      description: Creates or updates an authorization rule for a namespace.
      operationId: Namespaces_CreateOrUpdateAuthorizationRule
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/authorizationRuleNameParameter'
        - description: The shared access authorization rule.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/SharedAccessAuthorizationRule'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Namespace authorization rule created
          schema:
            $ref: '#/definitions/SharedAccessAuthorizationRule'
      tags:
        - Namespaces
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/listKeys':
    post:
      description: Gets the primary and secondary connection strings for the namespace.
      operationId: Namespaces_ListKeys
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/authorizationRuleNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Connection strings returned successfully.
          schema:
            $ref: '#/definitions/ResourceListKeys'
      tags:
        - Namespaces
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/AuthorizationRules/{authorizationRuleName}/regenerateKeys':
    post:
      description: Regenerates the primary or secondary connection strings for the specified namespace.
      operationId: Namespaces_RegenerateKeys
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/authorizationRuleNameParameter'
        - description: Parameters required to regenerate the connection string.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/RegenerateKeysParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Connection strings regenerated successfully.
          schema:
            $ref: '#/definitions/ResourceListKeys'
      tags:
        - Namespaces
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs':
    get:
      description: Gets all the Event Hubs in a namespace.
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639493.aspx'
      operationId: EventHubs_ListByNamespace
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the list of Event Hubs.
          schema:
            $ref: '#/definitions/EventHubListResult'
      tags:
        - EventHubs
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}':
    delete:
      description: Deletes an Event Hub from the specified namespace and resource group.
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639496.aspx'
      operationId: EventHubs_Delete
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/eventHubNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Event Hub successfully deleted.
        '204':
          description: No content.
      tags:
        - EventHubs
    get:
      description: Gets an Event Hubs description for the specified Event Hub.
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639501.aspx'
      operationId: EventHubs_Get
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/eventHubNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the Event Hub description.
          schema:
            $ref: '#/definitions/EventHub'
      tags:
        - EventHubs
    put:
      description: Creates or updates a new Event Hub as a nested resource within a namespace.
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639497.aspx'
      operationId: EventHubs_CreateOrUpdate
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/eventHubNameParameter'
        - description: Parameters supplied to create an Event Hub resource.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/EventHub'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Event Hub successfully created.
          schema:
            $ref: '#/definitions/EventHub'
      tags:
        - EventHubs
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules':
    get:
      description: Gets the authorization rules for an Event Hub.
      operationId: EventHubs_ListAuthorizationRules
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/eventHubNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Event Hub authorization rule returned successfully.
          schema:
            $ref: '#/definitions/SharedAccessAuthorizationRuleListResult'
      tags:
        - EventHubs
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}':
    delete:
      description: Deletes an Event Hubs authorization rule.
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt706100.aspx'
      operationId: EventHubs_DeleteAuthorizationRule
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/eventHubNameParameter'
        - $ref: '#/parameters/authorizationRuleNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Event Hub authorization rule successfully deleted.
        '204':
          description: No content.
      tags:
        - EventHubs
    get:
      description: Gets an authorization rule for an Event Hub by rule name.
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt706097.aspx'
      operationId: EventHubs_GetAuthorizationRule
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/eventHubNameParameter'
        - $ref: '#/parameters/authorizationRuleNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Event Hub authorization rule successfully returned.
          schema:
            $ref: '#/definitions/SharedAccessAuthorizationRule'
      tags:
        - EventHubs
    put:
      description: Creates or updates an authorization rule for the specified Event Hub.
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt706096.aspx'
      operationId: EventHubs_CreateOrUpdateAuthorizationRule
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/eventHubNameParameter'
        - $ref: '#/parameters/authorizationRuleNameParameter'
        - description: The shared access authorization rule.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/SharedAccessAuthorizationRule'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Event Hubs authorization rule successfully created.
          schema:
            $ref: '#/definitions/SharedAccessAuthorizationRule'
      tags:
        - EventHubs
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}/ListKeys':
    post:
      description: Gets the ACS and SAS connection strings for the Event Hub.
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt706098.aspx'
      operationId: EventHubs_ListKeys
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/eventHubNameParameter'
        - $ref: '#/parameters/authorizationRuleNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Connection strings successfully returned.
          schema:
            $ref: '#/definitions/ResourceListKeys'
      tags:
        - EventHubs
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/authorizationRules/{authorizationRuleName}/regenerateKeys':
    post:
      description: Regenerates the ACS and SAS connection strings for the Event Hub.
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt706099.aspx'
      operationId: EventHubs_RegenerateKeys
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/eventHubNameParameter'
        - $ref: '#/parameters/authorizationRuleNameParameter'
        - description: Parameters supplied to regenerate the authorization rule.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/RegenerateKeysParameters'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Connection strings successfully regenerated.
          schema:
            $ref: '#/definitions/ResourceListKeys'
      tags:
        - EventHubs
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups':
    get:
      description: Gets all the consumer groups in a eventhub. An empty feed is returned if no consumer group exists in the eventhub.
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639503.aspx'
      operationId: ConsumerGroups_ListByEventHub
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/eventHubNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the list of consumer groups.
          schema:
            $ref: '#/definitions/ConsumerGroupListResult'
      tags:
        - ConsumerGroups
      x-ms-pageable:
        nextLinkName: nextLink
  '/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventHub/namespaces/{namespaceName}/eventhubs/{eventHubName}/consumergroups/{consumerGroupName}':
    delete:
      description: Deletes a consumer group from the specified Event Hub and resource group.
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639491.aspx'
      operationId: ConsumerGroups_Delete
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/eventHubNameParameter'
        - $ref: '#/parameters/consumerGroupNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Consumer group deleted.
        '204':
          description: No content.
      tags:
        - ConsumerGroups
    get:
      description: Gets a description for the specified consumer group.
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639488.aspx'
      operationId: ConsumerGroups_Get
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/eventHubNameParameter'
        - $ref: '#/parameters/consumerGroupNameParameter'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Successfully retrieved the consumer group description.
          schema:
            $ref: '#/definitions/ConsumerGroup'
      tags:
        - ConsumerGroups
    put:
      description: Creates or updates an Event Hubs consumer group as a nested resource within a namespace.
      externalDocs:
        url: 'https://msdn.microsoft.com/en-us/library/azure/mt639498.aspx'
      operationId: ConsumerGroups_CreateOrUpdate
      parameters:
        - description: Name of the Resource group within the Azure subscription.
          in: path
          maxLength: 90
          minLength: 1
          name: resourceGroupName
          required: true
          type: string
        - $ref: '#/parameters/namespaceNameParameter'
        - $ref: '#/parameters/eventHubNameParameter'
        - $ref: '#/parameters/consumerGroupNameParameter'
        - description: Parameters supplied to create a consumer group resource.
          in: body
          name: parameters
          required: true
          schema:
            $ref: '#/definitions/ConsumerGroup'
        - $ref: '#/parameters/ApiVersionParameter'
        - $ref: '#/parameters/SubscriptionIdParameter'
      responses:
        '200':
          description: Consumer group successfully created.
          schema:
            $ref: '#/definitions/ConsumerGroup'
      tags:
        - ConsumerGroups
definitions:
  CheckNameAvailability:
    description: Description of a Check Name availability request properties.
    properties:
      name:
        description: The Name to check the namespce name availability
        type: string
    required:
      - name
  CheckNameAvailabilityResult:
    description: Description of a Check Name availability request properties.
    properties:
      message:
        description: The detailed info regarding the reason associated with the namespace.
        readOnly: true
        type: string
      nameAvailable:
        description: 'Value indicating namespace is availability, true if the namespace is available; otherwise, false.'
        type: boolean
      reason:
        $ref: '#/definitions/UnavailableReason'
        description: The reason for unavailability of a namespace.
  ConsumerGroup:
    allOf:
      - $ref: '#/definitions/Resource'
    description: Description of the consumer group resource.
    properties:
      properties:
        $ref: '#/definitions/ConsumerGroupProperties'
        x-ms-client-flatten: true
  ConsumerGroupListResult:
    description: The response to the List Consumer Group operation.
    properties:
      nextLink:
        description: Link to the next set of results. Not empty if Value contains incomplete list of Consumer Group
        type: string
      value:
        description: Result of the List Consumer Group operation.
        items:
          $ref: '#/definitions/ConsumerGroup'
        type: array
  ConsumerGroupProperties:
    description: Description of a Consumer Group properties.
    properties:
      createdAt:
        description: Exact time the message was created.
        format: date-time
        readOnly: true
        type: string
      eventHubPath:
        description: The path of the Event Hub.
        readOnly: true
        type: string
      updatedAt:
        description: The exact time the message was updated.
        format: date-time
        readOnly: true
        type: string
      userMetadata:
        description: 'Usermetadata is a placeholder to store user-defined string data with maximum length 1024. e.g. it can be used to store descriptive data, such as list of teams and their contact information also user-defined configuration settings can be stored.'
        type: string
  ErrorResponse:
    description: Error reponse indicates EventHub service is not able to process the incoming request. The reason is provided in the error message.
    properties:
      code:
        description: Error code.
        type: string
      message:
        description: Error message indicating why the operation failed.
        type: string
    type: object
  EventHub:
    allOf:
      - $ref: '#/definitions/Resource'
    description: Description of the Event Hub resource.
    properties:
      properties:
        $ref: '#/definitions/EventHubProperties'
        x-ms-client-flatten: true
  EventHubListResult:
    description: The response of the List Event Hubs operation.
    properties:
      nextLink:
        description: Link to the next set of results. Not empty if Value contains incomplete list of Event Hubs.
        type: string
      value:
        description: Result of the List Event Hubs operation.
        items:
          $ref: '#/definitions/EventHub'
        type: array
  EventHubProperties:
    description: Description of a EventHub Properties.
    properties:
      createdAt:
        description: Exact time the Event Hub was created.
        format: date-time
        readOnly: true
        type: string
      messageRetentionInDays:
        description: Number of days to retain the events for this Event Hub.
        format: int64
        type: integer
      partitionCount:
        description: Number of partitions created for the Event Hub.
        format: int64
        type: integer
      partitionIds:
        description: Current number of shards on the Event Hub.
        items:
          type: string
        readOnly: true
        type: array
      status:
        description: Enumerates the possible values for the status of the Event Hub.
        enum:
          - Active
          - Disabled
          - Restoring
          - SendDisabled
          - ReceiveDisabled
          - Creating
          - Deleting
          - Renaming
          - Unknown
        readOnly: true
        type: string
        x-ms-enum:
          modelAsString: false
          name: EntityStatus
      updatedAt:
        description: The exact time the message was updated.
        format: date-time
        readOnly: true
        type: string
  Namespace:
    allOf:
      - $ref: '#/definitions/TrackedResource'
    description: Description of a namespace resource.
    properties:
      properties:
        $ref: '#/definitions/NamespaceProperties'
        x-ms-client-flatten: true
      sku:
        $ref: '#/definitions/Sku'
  NamespaceListResult:
    description: The response of the List Namespace operation.
    properties:
      nextLink:
        description: Link to the next set of results. Not empty if Value contains incomplete list of namespaces.
        type: string
      value:
        description: Result of the List Namespace operation.
        items:
          $ref: '#/definitions/Namespace'
        type: array
  NamespaceProperties:
    description: Properties of the namespace.
    properties:
      createdAt:
        description: The time the namespace was created.
        format: date-time
        readOnly: true
        type: string
      provisioningState:
        description: Provisioning state of the namespace.
        readOnly: true
        type: string
      serviceBusEndpoint:
        description: Endpoint you can use to perform Service Bus operations.
        readOnly: true
        type: string
      updatedAt:
        description: The time the namespace was updated.
        format: date-time
        readOnly: true
        type: string
  NamespaceUpdateParameter:
    description: Parameters supplied to the Patch Namespace operation.
    properties:
      sku:
        $ref: '#/definitions/Sku'
        description: The sku of the created namespace
      tags:
        additionalProperties:
          type: string
        description: Resource tags
        type: object
  Operation:
    description: A EventHub REST API operation
    properties:
      display:
        description: The object that represents the operation.
        properties:
          operation:
            description: 'Operation type: Read, write, delete, etc.'
            readOnly: true
            type: string
          provider:
            description: 'Service provider: Microsoft.EventHub'
            readOnly: true
            type: string
          resource:
            description: 'Resource on which the operation is performed: Invoice, etc.'
            readOnly: true
            type: string
      name:
        description: 'Operation name: {provider}/{resource}/{operation}'
        readOnly: true
        type: string
    type: object
  OperationListResult:
    description: Result of the request to list EventHub operations. It contains a list of operations and a URL link to get the next set of results.
    properties:
      nextLink:
        description: URL to get the next set of operation list results if there are any.
        readOnly: true
        type: string
      value:
        description: List of EventHub operations supported by the Microsoft.EventHub resource provider.
        items:
          $ref: '#/definitions/Operation'
        readOnly: true
        type: array
  RegenerateKeysParameters:
    description: Parameters supplied to the Regenerate Authorization Rule operation.
    properties:
      policykey:
        description: Key that needs to be regenerated.
        enum:
          - PrimaryKey
          - SecondaryKey
        type: string
        x-ms-enum:
          modelAsString: false
          name: Policykey
  Resource:
    description: The Resource definition
    properties:
      id:
        description: Resource Id
        readOnly: true
        type: string
      name:
        description: Resource name
        readOnly: true
        type: string
      type:
        description: Resource type
        readOnly: true
        type: string
    x-ms-azure-resource: true
  ResourceListKeys:
    description: Namespace/EventHub Connection String
    properties:
      keyName:
        description: A string that describes the authorization rule.
        readOnly: true
        type: string
      primaryConnectionString:
        description: Primary connection string of the created namespace authorization rule.
        readOnly: true
        type: string
      primaryKey:
        description: A base64-encoded 256-bit primary key for signing and validating the SAS token.
        readOnly: true
        type: string
      secondaryConnectionString:
        description: Secondary connection string of the created namespace authorization rule.
        readOnly: true
        type: string
      secondaryKey:
        description: A base64-encoded 256-bit secondary key for signing and validating the SAS token.
        readOnly: true
        type: string
  SharedAccessAuthorizationRule:
    allOf:
      - $ref: '#/definitions/Resource'
    description: Description of a namespace authorization rule.
    properties:
      properties:
        $ref: '#/definitions/SharedAccessAuthorizationRuleProperties'
        x-ms-client-flatten: true
  SharedAccessAuthorizationRuleListResult:
    description: The response from the List Namespace operation.
    properties:
      nextLink:
        description: Link to the next set of results. Not empty if Value contains an incomplete list of Authorization Rules
        type: string
      value:
        description: Result of the List Authorization Rules operation.
        items:
          $ref: '#/definitions/SharedAccessAuthorizationRule'
        type: array
  SharedAccessAuthorizationRuleProperties:
    description: SharedAccessAuthorizationRule properties.
    properties:
      rights:
        description: The rights associated with the rule.
        items:
          enum:
            - Manage
            - Send
            - Listen
          type: string
          x-ms-enum:
            modelAsString: false
            name: AccessRights
        type: array
    required:
      - rights
  Sku:
    description: SKU of the namespace.
    properties:
      capacity:
        description: The EventHubs throughput units.
        format: int32
        type: integer
      name:
        description: Name of this SKU.
        enum:
          - Basic
          - Standard
        type: string
        x-ms-enum:
          modelAsString: true
          name: SkuName
      tier:
        description: The billing tier of this particular SKU.
        enum:
          - Basic
          - Standard
          - Premium
        type: string
        x-ms-enum:
          modelAsString: true
          name: SkuTier
    required:
      - tier
    type: object
  TrackedResource:
    allOf:
      - $ref: '#/definitions/Resource'
    description: Definition of Resource
    properties:
      location:
        description: Resource location
        type: string
      tags:
        additionalProperties:
          type: string
        description: Resource tags
        type: object
    required:
      - location
    x-ms-azure-resource: true
  UnavailableReason:
    description: Specifies the reason for the unavailability of the service.
    enum:
      - None
      - InvalidName
      - SubscriptionIsDisabled
      - NameInUse
      - NameInLockdown
      - TooManyNamespaceInCurrentSubscription
    type: string
    x-ms-enum:
      modelAsString: false
      name: UnavailableReason
